{"code":"import { Dom } from '../../core/dom';\r\nimport { Vector } from '../../core/vector';\r\nimport { InputView } from '../common-views/input-view';\r\nimport { JoinView } from '../common-views/join-view';\r\nimport { LabelView } from '../common-views/label-view';\r\nimport { RegionView } from '../common-views/region-view';\r\nexport const createContainerStepComponentViewFactory = (cfg) => (parentElement, stepContext, viewContext) => {\r\n    const { step } = stepContext;\r\n    const g = Dom.svg('g', {\r\n        class: `sqd-step-container sqd-type-${step.type}`\r\n    });\r\n    parentElement.appendChild(g);\r\n    const labelView = LabelView.create(g, cfg.paddingTop, cfg.label, step.name, 'primary');\r\n    const sequenceComponent = viewContext.createSequenceComponent(g, step.sequence);\r\n    const halfOfWidestElement = labelView.width / 2;\r\n    const offsetLeft = Math.max(halfOfWidestElement - sequenceComponent.view.joinX, 0) + cfg.paddingX;\r\n    const offsetRight = Math.max(halfOfWidestElement - (sequenceComponent.view.width - sequenceComponent.view.joinX), 0) + cfg.paddingX;\r\n    const width = offsetLeft + sequenceComponent.view.width + offsetRight;\r\n    const height = cfg.paddingTop + cfg.label.height + sequenceComponent.view.height;\r\n    const joinX = sequenceComponent.view.joinX + offsetLeft;\r\n    Dom.translate(labelView.g, joinX, 0);\r\n    Dom.translate(sequenceComponent.view.g, offsetLeft, cfg.paddingTop + cfg.label.height);\r\n    const iconUrl = viewContext.getStepIconUrl();\r\n    const inputView = InputView.createRectInput(g, joinX, 0, cfg.inputSize, cfg.inputIconSize, iconUrl);\r\n    JoinView.createStraightJoin(g, new Vector(joinX, 0), cfg.paddingTop);\r\n    const regionView = RegionView.create(g, [width], height);\r\n    return {\r\n        g,\r\n        width,\r\n        height,\r\n        joinX,\r\n        placeholders: null,\r\n        sequenceComponents: [sequenceComponent],\r\n        getClientPosition() {\r\n            return regionView.getClientPosition();\r\n        },\r\n        resolveClick(click) {\r\n            return regionView.resolveClick(click) || g.contains(click.element) ? true : null;\r\n        },\r\n        setIsDragging(isDragging) {\r\n            inputView.setIsHidden(isDragging);\r\n        },\r\n        setIsSelected(isSelected) {\r\n            regionView.setIsSelected(isSelected);\r\n        },\r\n        setIsDisabled(isDisabled) {\r\n            Dom.toggleClass(g, isDisabled, 'sqd-disabled');\r\n        },\r\n        hasOutput() {\r\n            return sequenceComponent.hasOutput;\r\n        }\r\n    };\r\n};\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/dom.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/vector.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/common-views/input-view.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/common-views/join-view.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/common-views/label-view.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/common-views/region-view.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/container-step/container-step-component-view-configuration.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/container-step/container-step-component-view.d.ts","writeByteOrderMark":false,"text":"import { StepComponentViewFactory } from '../../designer-extension';\r\nimport { ContainerStepComponentViewConfiguration } from './container-step-component-view-configuration';\r\nexport declare const createContainerStepComponentViewFactory: (cfg: ContainerStepComponentViewConfiguration) => StepComponentViewFactory;\r\n"}}
