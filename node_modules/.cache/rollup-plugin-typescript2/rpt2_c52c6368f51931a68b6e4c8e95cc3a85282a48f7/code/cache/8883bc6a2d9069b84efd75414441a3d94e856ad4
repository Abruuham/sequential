{"code":"import { race } from '../core';\r\nexport class PathBarApi {\r\n    constructor(state, definitionWalker) {\r\n        this.state = state;\r\n        this.definitionWalker = definitionWalker;\r\n        this.onStateChanged = race(0, this.state.onFolderPathChanged, this.state.onDefinitionChanged);\r\n    }\r\n    setFolderPath(path) {\r\n        this.state.setFolderPath(path);\r\n    }\r\n    getFolderPath() {\r\n        return this.state.folderPath;\r\n    }\r\n    getFolderPathStepNames() {\r\n        return this.state.folderPath.map(stepId => {\r\n            return this.definitionWalker.getById(this.state.definition, stepId).name;\r\n        });\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-state.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/api/path-bar-api.d.ts","writeByteOrderMark":false,"text":"import { DefinitionWalker } from '../definition';\r\nimport { DesignerState } from '../designer-state';\r\nexport declare class PathBarApi {\r\n    private readonly state;\r\n    private readonly definitionWalker;\r\n    constructor(state: DesignerState, definitionWalker: DefinitionWalker);\r\n    readonly onStateChanged: import(\"../core\").SimpleEvent<[(string[] | undefined)?, (import(\"../designer-state\").DefinitionChangedEvent | undefined)?, unknown?]>;\r\n    setFolderPath(path: string[]): void;\r\n    getFolderPath(): string[];\r\n    getFolderPathStepNames(): string[];\r\n}\r\n"}}
