{"code":"import { Dom } from '../core';\r\nconst SAFE_OFFSET = 10;\r\nexport class DefaultDraggedComponent {\r\n    static create(parent, step, componentContext) {\r\n        const canvas = Dom.svg('svg');\r\n        canvas.style.marginLeft = -SAFE_OFFSET + 'px';\r\n        canvas.style.marginTop = -SAFE_OFFSET + 'px';\r\n        parent.appendChild(canvas);\r\n        const fakeStepContext = {\r\n            parentSequence: [],\r\n            step,\r\n            depth: 0,\r\n            position: 0,\r\n            isInputConnected: true,\r\n            isOutputConnected: true\r\n        };\r\n        const stepComponent = componentContext.stepComponentFactory.create(canvas, fakeStepContext, componentContext);\r\n        Dom.attrs(canvas, {\r\n            width: stepComponent.view.width + SAFE_OFFSET * 2,\r\n            height: stepComponent.view.height + SAFE_OFFSET * 2\r\n        });\r\n        Dom.translate(stepComponent.view.g, SAFE_OFFSET, SAFE_OFFSET);\r\n        return new DefaultDraggedComponent(stepComponent.view.width, stepComponent.view.height);\r\n    }\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    destroy() {\r\n        // Nothing to destroy...\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/component-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/behaviors/default-dragged-component.d.ts","writeByteOrderMark":false,"text":"import { Step } from '../definition';\r\nimport { ComponentContext } from '../component-context';\r\nimport { DraggedComponent } from '../designer-extension';\r\nexport declare class DefaultDraggedComponent implements DraggedComponent {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    static create(parent: HTMLElement, step: Step, componentContext: ComponentContext): DefaultDraggedComponent;\r\n    private constructor();\r\n    destroy(): void;\r\n}\r\n"}}
