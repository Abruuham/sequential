{"code":"import { Icons } from '../../../core';\r\nimport { Dom } from '../../../core/dom';\r\nexport class ValidationErrorBadgeView {\r\n    static create(parent, cfg) {\r\n        const g = Dom.svg('g');\r\n        const halfOfSize = cfg.size / 2;\r\n        const circle = Dom.svg('path', {\r\n            class: 'sqd-validation-error',\r\n            d: `M 0 ${-halfOfSize} l ${halfOfSize} ${cfg.size} l ${-cfg.size} 0 Z`\r\n        });\r\n        Dom.translate(circle, halfOfSize, halfOfSize);\r\n        g.appendChild(circle);\r\n        const icon = Icons.appendPath(g, 'sqd-validation-error-icon-path', Icons.alert, cfg.iconSize);\r\n        const offsetX = (cfg.size - cfg.iconSize) / 2;\r\n        const offsetY = offsetX * 1.5;\r\n        Dom.translate(icon, offsetX, offsetY);\r\n        parent.appendChild(g);\r\n        return new ValidationErrorBadgeView(parent, g, cfg.size, cfg.size);\r\n    }\r\n    constructor(parent, g, width, height) {\r\n        this.parent = parent;\r\n        this.g = g;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    destroy() {\r\n        this.parent.removeChild(this.g);\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/dom.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/badges/validation-error/validation-error-badge-view-configuration.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/badges/validation-error/validation-error-badge-view.d.ts","writeByteOrderMark":false,"text":"import { BadgeView } from '../../component';\r\nimport { ValidationErrorBadgeViewConfiguration } from './validation-error-badge-view-configuration';\r\nexport declare class ValidationErrorBadgeView implements BadgeView {\r\n    private readonly parent;\r\n    readonly g: SVGGElement;\r\n    readonly width: number;\r\n    readonly height: number;\r\n    static create(parent: SVGElement, cfg: ValidationErrorBadgeViewConfiguration): ValidationErrorBadgeView;\r\n    constructor(parent: SVGElement, g: SVGGElement, width: number, height: number);\r\n    destroy(): void;\r\n}\r\n"}}
