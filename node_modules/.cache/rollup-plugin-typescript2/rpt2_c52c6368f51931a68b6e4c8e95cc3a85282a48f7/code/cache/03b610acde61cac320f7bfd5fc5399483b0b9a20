{"code":"import { StepTypeValidator } from '../core/step-type-validator';\r\nexport class ToolboxDataProvider {\r\n    constructor(iconProvider, configuration) {\r\n        this.iconProvider = iconProvider;\r\n        this.configuration = configuration;\r\n        this.createItemData = (step) => {\r\n            StepTypeValidator.validate(step.type);\r\n            const iconUrl = this.iconProvider.getIconUrl(step);\r\n            const label = this.configuration && this.configuration.labelProvider ? this.configuration.labelProvider(step) : step.name;\r\n            const description = this.configuration && this.configuration.descriptionProvider ? this.configuration.descriptionProvider(step) : label;\r\n            const lowerCaseLabel = label.toLowerCase();\r\n            return {\r\n                iconUrl,\r\n                label,\r\n                description,\r\n                lowerCaseLabel,\r\n                step\r\n            };\r\n        };\r\n    }\r\n    getAllGroups() {\r\n        if (!this.configuration) {\r\n            return [];\r\n        }\r\n        return this.configuration.groups.map(group => {\r\n            return {\r\n                name: group.name,\r\n                items: group.steps.map(this.createItemData)\r\n            };\r\n        });\r\n    }\r\n    applyFilter(allGroups, filter) {\r\n        if (!filter) {\r\n            return allGroups;\r\n        }\r\n        const lowerCaseFilter = filter.toLowerCase();\r\n        return allGroups\r\n            .map(group => {\r\n            return {\r\n                name: group.name,\r\n                items: group.items.filter(s => {\r\n                    return s.lowerCaseLabel.includes(lowerCaseFilter);\r\n                })\r\n            };\r\n        })\r\n            .filter(group => group.items.length > 0);\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/icon-provider.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/step-type-validator.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-configuration.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/toolbox/toolbox-data-provider.d.ts","writeByteOrderMark":false,"text":"import { IconProvider } from '../core/icon-provider';\r\nimport { StepDefinition, ToolboxConfiguration } from '../designer-configuration';\r\nexport declare class ToolboxDataProvider {\r\n    private readonly iconProvider;\r\n    private readonly configuration;\r\n    constructor(iconProvider: IconProvider, configuration: ToolboxConfiguration | false);\r\n    getAllGroups(): ToolboxGroupData[];\r\n    private readonly createItemData;\r\n    applyFilter(allGroups: ToolboxGroupData[], filter: string | undefined): ToolboxGroupData[];\r\n}\r\nexport interface ToolboxGroupData {\r\n    name: string;\r\n    items: ToolboxItemData[];\r\n}\r\nexport interface ToolboxItemData {\r\n    iconUrl: string | null;\r\n    label: string;\r\n    lowerCaseLabel: string;\r\n    description: string;\r\n    step: StepDefinition;\r\n}\r\n"}}
