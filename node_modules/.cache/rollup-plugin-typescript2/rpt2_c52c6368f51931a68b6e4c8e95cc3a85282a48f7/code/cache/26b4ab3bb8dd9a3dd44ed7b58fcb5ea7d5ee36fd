{"code":"import { StepComponent } from './step-component';\r\nimport { StepComponentViewContextFactory } from './step-component-view-context-factory';\r\nexport class StepComponentFactory {\r\n    constructor(stepExtensionResolver) {\r\n        this.stepExtensionResolver = stepExtensionResolver;\r\n    }\r\n    create(parentElement, stepContext, componentContext) {\r\n        const viewContext = StepComponentViewContextFactory.create(stepContext, componentContext);\r\n        const extension = this.stepExtensionResolver.resolve(stepContext.step.componentType);\r\n        const view = extension.createComponentView(parentElement, stepContext, viewContext);\r\n        const wrappedView = componentContext.services.stepComponentViewWrapper.wrap(view, stepContext);\r\n        return StepComponent.create(wrappedView, stepContext, componentContext);\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/component-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/step-extension-resolver.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/step-component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/step-component-view-context-factory.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/step-component-factory.d.ts","writeByteOrderMark":false,"text":"import { ComponentContext } from '../component-context';\r\nimport { StepExtensionResolver } from './step-extension-resolver';\r\nimport { StepComponent } from './step-component';\r\nimport { StepContext } from '../designer-extension';\r\nexport declare class StepComponentFactory {\r\n    private readonly stepExtensionResolver;\r\n    constructor(stepExtensionResolver: StepExtensionResolver);\r\n    create(parentElement: SVGElement, stepContext: StepContext, componentContext: ComponentContext): StepComponent;\r\n}\r\n"}}
