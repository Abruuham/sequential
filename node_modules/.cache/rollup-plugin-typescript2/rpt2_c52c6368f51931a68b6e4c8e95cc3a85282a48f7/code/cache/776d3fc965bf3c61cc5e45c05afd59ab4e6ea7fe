{"code":"import { DefaultSequenceComponentView } from './default-sequence-component-view';\r\nexport class DefaultSequenceComponent {\r\n    static create(parentElement, sequenceContext, context) {\r\n        const view = DefaultSequenceComponentView.create(parentElement, sequenceContext, context);\r\n        return new DefaultSequenceComponent(view, view.hasOutput());\r\n    }\r\n    constructor(view, hasOutput) {\r\n        this.view = view;\r\n        this.hasOutput = hasOutput;\r\n    }\r\n    resolveClick(click) {\r\n        for (const component of this.view.components) {\r\n            const result = component.resolveClick(click);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n        for (const placeholder of this.view.placeholders) {\r\n            const result = placeholder.resolveClick(click);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    findById(stepId) {\r\n        for (const component of this.view.components) {\r\n            const sc = component.findById(stepId);\r\n            if (sc) {\r\n                return sc;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getPlaceholders(result) {\r\n        this.view.placeholders.forEach(placeholder => result.push(placeholder));\r\n        this.view.components.forEach(c => c.getPlaceholders(result));\r\n    }\r\n    setIsDragging(isDragging) {\r\n        this.view.setIsDragging(isDragging);\r\n        this.view.components.forEach(c => c.setIsDragging(isDragging));\r\n    }\r\n    updateBadges(result) {\r\n        for (const component of this.view.components) {\r\n            component.updateBadges(result);\r\n        }\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/sequence/default-sequence-component-view.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/component-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/step-component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/sequence/default-sequence-component.d.ts","writeByteOrderMark":false,"text":"import { BadgesResult, ClickCommand, ClickDetails, Placeholder, SequenceComponent } from '../component';\r\nimport { DefaultSequenceComponentView } from './default-sequence-component-view';\r\nimport { ComponentContext } from '../../component-context';\r\nimport { StepComponent } from '../step-component';\r\nimport { SequenceContext } from '../../designer-extension';\r\nexport declare class DefaultSequenceComponent implements SequenceComponent {\r\n    readonly view: DefaultSequenceComponentView;\r\n    readonly hasOutput: boolean;\r\n    static create(parentElement: SVGElement, sequenceContext: SequenceContext, context: ComponentContext): DefaultSequenceComponent;\r\n    private constructor();\r\n    resolveClick(click: ClickDetails): ClickCommand | null;\r\n    findById(stepId: string): StepComponent | null;\r\n    getPlaceholders(result: Placeholder[]): void;\r\n    setIsDragging(isDragging: boolean): void;\r\n    updateBadges(result: BadgesResult): void;\r\n}\r\n"}}
