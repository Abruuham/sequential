{"code":"import { animate } from '../../core/animation';\r\nexport class ViewportAnimator {\r\n    constructor(api) {\r\n        this.api = api;\r\n    }\r\n    execute(target) {\r\n        if (this.animation && this.animation.isAlive) {\r\n            this.animation.stop();\r\n        }\r\n        const viewport = this.api.getViewport();\r\n        const startPosition = viewport.position;\r\n        const startScale = viewport.scale;\r\n        const deltaPosition = startPosition.subtract(target.position);\r\n        const deltaScale = startScale - target.scale;\r\n        this.animation = animate(150, progress => {\r\n            const newScale = startScale - deltaScale * progress;\r\n            this.api.setViewport({\r\n                position: startPosition.subtract(deltaPosition.multiplyByScalar(progress)),\r\n                scale: newScale\r\n            });\r\n        });\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/api/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/animation.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/viewport/viewport-animator.d.ts","writeByteOrderMark":false,"text":"import { WorkspaceApi } from '../../api';\r\nimport { Viewport } from '../../designer-extension';\r\nexport declare class ViewportAnimator {\r\n    private readonly api;\r\n    private animation?;\r\n    constructor(api: WorkspaceApi);\r\n    execute(target: Viewport): void;\r\n}\r\n"}}
