{"code":"export class OpenFolderPressingBehaviorHandler {\r\n    constructor(command, designerContext) {\r\n        this.command = command;\r\n        this.designerContext = designerContext;\r\n    }\r\n    handle() {\r\n        const stepId = this.command.step.id;\r\n        this.designerContext.state.pushStepIdToFolderPath(stepId);\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/behaviors/pressing-behaviors/pressing-behavior.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/behaviors/pressing-behaviors/open-folder-pressing-behavior-handler.d.ts","writeByteOrderMark":false,"text":"import { DesignerContext } from '../../designer-context';\r\nimport { OpenFolderClickCommand } from '../../workspace';\r\nimport { PressingBehaviorHandler } from './pressing-behavior';\r\nexport declare class OpenFolderPressingBehaviorHandler implements PressingBehaviorHandler {\r\n    private readonly command;\r\n    private readonly designerContext;\r\n    constructor(command: OpenFolderClickCommand, designerContext: DesignerContext);\r\n    handle(): void;\r\n}\r\n"}}
