{"code":"export class PressingBehavior {\r\n    static create(clickedElement, handler) {\r\n        return new PressingBehavior(clickedElement, handler);\r\n    }\r\n    constructor(clickedElement, handler) {\r\n        this.clickedElement = clickedElement;\r\n        this.handler = handler;\r\n    }\r\n    onStart() {\r\n        // Nothing...\r\n    }\r\n    onMove() {\r\n        // Nothing...\r\n    }\r\n    onEnd(interrupt, element) {\r\n        if (!interrupt && element && this.clickedElement === element) {\r\n            this.handler.handle();\r\n        }\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/behaviors/behavior.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/behaviors/pressing-behaviors/pressing-behavior.d.ts","writeByteOrderMark":false,"text":"import { Behavior } from '../behavior';\r\nexport interface PressingBehaviorHandler {\r\n    handle(): void;\r\n}\r\nexport declare class PressingBehavior implements Behavior {\r\n    private readonly clickedElement;\r\n    private readonly handler;\r\n    static create(clickedElement: Element, handler: PressingBehaviorHandler): PressingBehavior;\r\n    private constructor();\r\n    onStart(): void;\r\n    onMove(): void;\r\n    onEnd(interrupt: boolean, element: Element | null): void;\r\n}\r\n"}}
