{"code":"import { Icons, Vector } from '../../core';\r\nimport { Dom } from '../../core/dom';\r\nimport { PlaceholderDirection } from '../component';\r\nimport { DefaultSequenceComponent } from '../sequence/default-sequence-component';\r\nimport { Badges } from '../badges/badges';\r\nconst SIZE = 30;\r\nconst DEFAULT_ICON_SIZE = 22;\r\nconst FOLDER_ICON_SIZE = 18;\r\nexport class StartStopRootComponentView {\r\n    static create(parent, sequence, parentPlaceIndicator, context) {\r\n        const g = Dom.svg('g', {\r\n            class: 'sqd-root-start-stop'\r\n        });\r\n        parent.appendChild(g);\r\n        const sequenceComponent = DefaultSequenceComponent.create(g, {\r\n            sequence,\r\n            depth: 0,\r\n            isInputConnected: true,\r\n            isOutputConnected: true\r\n        }, context);\r\n        const view = sequenceComponent.view;\r\n        const x = view.joinX - SIZE / 2;\r\n        const endY = SIZE + view.height;\r\n        const iconSize = parentPlaceIndicator ? FOLDER_ICON_SIZE : DEFAULT_ICON_SIZE;\r\n        const startCircle = createCircle(parentPlaceIndicator ? Icons.folder : Icons.play, iconSize);\r\n        Dom.translate(startCircle, x, 0);\r\n        g.appendChild(startCircle);\r\n        Dom.translate(view.g, 0, SIZE);\r\n        const endCircle = createCircle(parentPlaceIndicator ? Icons.folder : Icons.stop, iconSize);\r\n        Dom.translate(endCircle, x, endY);\r\n        g.appendChild(endCircle);\r\n        let startPlaceholder = null;\r\n        let endPlaceholder = null;\r\n        if (parentPlaceIndicator) {\r\n            const size = new Vector(SIZE, SIZE);\r\n            startPlaceholder = context.services.placeholder.createForArea(g, size, PlaceholderDirection.out, parentPlaceIndicator.sequence, parentPlaceIndicator.index);\r\n            endPlaceholder = context.services.placeholder.createForArea(g, size, PlaceholderDirection.out, parentPlaceIndicator.sequence, parentPlaceIndicator.index);\r\n            Dom.translate(startPlaceholder.view.g, x, 0);\r\n            Dom.translate(endPlaceholder.view.g, x, endY);\r\n        }\r\n        const badges = Badges.createForRoot(g, new Vector(x + SIZE, 0), context);\r\n        return new StartStopRootComponentView(g, view.width, view.height + SIZE * 2, view.joinX, sequenceComponent, startPlaceholder, endPlaceholder, badges);\r\n    }\r\n    constructor(g, width, height, joinX, component, startPlaceholder, endPlaceholder, badges) {\r\n        this.g = g;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.joinX = joinX;\r\n        this.component = component;\r\n        this.startPlaceholder = startPlaceholder;\r\n        this.endPlaceholder = endPlaceholder;\r\n        this.badges = badges;\r\n    }\r\n    destroy() {\r\n        var _a;\r\n        (_a = this.g.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.g);\r\n    }\r\n}\r\nfunction createCircle(d, iconSize) {\r\n    const r = SIZE / 2;\r\n    const circle = Dom.svg('circle', {\r\n        class: 'sqd-root-start-stop-circle',\r\n        cx: r,\r\n        cy: r,\r\n        r: r\r\n    });\r\n    const g = Dom.svg('g');\r\n    g.appendChild(circle);\r\n    const offset = (SIZE - iconSize) / 2;\r\n    const icon = Icons.appendPath(g, 'sqd-root-start-stop-icon', d, iconSize);\r\n    Dom.translate(icon, offset, offset);\r\n    return g;\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/dom.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/component-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/sequence/default-sequence-component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/badges/badges.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/start-stop-root/start-stop-root-component-view.d.ts","writeByteOrderMark":false,"text":"import { Sequence } from '../../definition';\r\nimport { ComponentView, Placeholder, SequenceComponent } from '../component';\r\nimport { ComponentContext } from '../../component-context';\r\nimport { SequencePlaceIndicator } from '../../designer-extension';\r\nimport { Badges } from '../badges/badges';\r\nexport declare class StartStopRootComponentView implements ComponentView {\r\n    readonly g: SVGGElement;\r\n    readonly width: number;\r\n    readonly height: number;\r\n    readonly joinX: number;\r\n    readonly component: SequenceComponent;\r\n    readonly startPlaceholder: Placeholder | null;\r\n    readonly endPlaceholder: Placeholder | null;\r\n    readonly badges: Badges;\r\n    static create(parent: SVGElement, sequence: Sequence, parentPlaceIndicator: SequencePlaceIndicator | null, context: ComponentContext): StartStopRootComponentView;\r\n    private constructor();\r\n    destroy(): void;\r\n}\r\n"}}
