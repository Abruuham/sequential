{"code":"import { BehaviorController } from './behaviors/behavior-controller';\r\nimport { ComponentContext } from './component-context';\r\nimport { ObjectCloner } from './core/object-cloner';\r\nimport { CustomActionController } from './custom-action-controller';\r\nimport { DefinitionWalker } from './definition';\r\nimport { StateModifier } from './modifier/state-modifier';\r\nimport { DesignerState } from './designer-state';\r\nimport { HistoryController } from './history-controller';\r\nimport { LayoutController } from './layout-controller';\r\nimport { StepExtensionResolver } from './workspace/step-extension-resolver';\r\nimport { WorkspaceControllerWrapper } from './workspace/workspace-controller';\r\nexport class DesignerContext {\r\n    static create(parent, startDefinition, configuration, services) {\r\n        var _a, _b, _c;\r\n        const definition = ObjectCloner.deepClone(startDefinition);\r\n        const layoutController = new LayoutController(parent);\r\n        const isReadonly = !!configuration.isReadonly;\r\n        const isToolboxCollapsed = configuration.toolbox ? (_a = configuration.toolbox.isCollapsed) !== null && _a !== void 0 ? _a : layoutController.isMobile() : false;\r\n        const isEditorCollapsed = configuration.editors ? (_b = configuration.editors.isCollapsed) !== null && _b !== void 0 ? _b : layoutController.isMobile() : false;\r\n        const theme = configuration.theme || 'light';\r\n        const state = new DesignerState(definition, isReadonly, isToolboxCollapsed, isEditorCollapsed);\r\n        const workspaceController = new WorkspaceControllerWrapper();\r\n        const behaviorController = new BehaviorController();\r\n        const stepExtensionResolver = StepExtensionResolver.create(services);\r\n        const definitionWalker = (_c = configuration.definitionWalker) !== null && _c !== void 0 ? _c : new DefinitionWalker();\r\n        const stateModifier = StateModifier.create(definitionWalker, state, configuration);\r\n        const customActionController = new CustomActionController(configuration, state, stateModifier);\r\n        let historyController = undefined;\r\n        if (configuration.undoStackSize) {\r\n            historyController = HistoryController.create(configuration.undoStack, state, stateModifier, configuration);\r\n        }\r\n        const componentContext = ComponentContext.create(configuration.steps, configuration.validator, state, stepExtensionResolver, services);\r\n        return new DesignerContext(theme, state, configuration, services, componentContext, definitionWalker, stateModifier, layoutController, workspaceController, behaviorController, customActionController, historyController);\r\n    }\r\n    constructor(theme, state, configuration, services, componentContext, definitionWalker, stateModifier, layoutController, workspaceController, behaviorController, customActionController, historyController) {\r\n        this.theme = theme;\r\n        this.state = state;\r\n        this.configuration = configuration;\r\n        this.services = services;\r\n        this.componentContext = componentContext;\r\n        this.definitionWalker = definitionWalker;\r\n        this.stateModifier = stateModifier;\r\n        this.layoutController = layoutController;\r\n        this.workspaceController = workspaceController;\r\n        this.behaviorController = behaviorController;\r\n        this.customActionController = customActionController;\r\n        this.historyController = historyController;\r\n    }\r\n    setWorkspaceController(controller) {\r\n        this.workspaceController.set(controller);\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/behaviors/behavior-controller.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/component-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/object-cloner.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/custom-action-controller.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/modifier/state-modifier.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-configuration.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-state.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/history-controller.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/layout-controller.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/services.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/step-extension-resolver.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/workspace-controller.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/designer-context.d.ts","writeByteOrderMark":false,"text":"import { BehaviorController } from './behaviors/behavior-controller';\r\nimport { ComponentContext } from './component-context';\r\nimport { CustomActionController } from './custom-action-controller';\r\nimport { Definition, DefinitionWalker } from './definition';\r\nimport { StateModifier } from './modifier/state-modifier';\r\nimport { DesignerConfiguration } from './designer-configuration';\r\nimport { DesignerState } from './designer-state';\r\nimport { HistoryController } from './history-controller';\r\nimport { LayoutController } from './layout-controller';\r\nimport { Services } from './services';\r\nimport { WorkspaceController, WorkspaceControllerWrapper } from './workspace/workspace-controller';\r\nexport declare class DesignerContext {\r\n    readonly theme: string;\r\n    readonly state: DesignerState;\r\n    readonly configuration: DesignerConfiguration;\r\n    readonly services: Services;\r\n    readonly componentContext: ComponentContext;\r\n    readonly definitionWalker: DefinitionWalker;\r\n    readonly stateModifier: StateModifier;\r\n    readonly layoutController: LayoutController;\r\n    readonly workspaceController: WorkspaceControllerWrapper;\r\n    readonly behaviorController: BehaviorController;\r\n    readonly customActionController: CustomActionController;\r\n    readonly historyController: HistoryController | undefined;\r\n    static create(parent: HTMLElement, startDefinition: Definition, configuration: DesignerConfiguration, services: Services): DesignerContext;\r\n    constructor(theme: string, state: DesignerState, configuration: DesignerConfiguration, services: Services, componentContext: ComponentContext, definitionWalker: DefinitionWalker, stateModifier: StateModifier, layoutController: LayoutController, workspaceController: WorkspaceControllerWrapper, behaviorController: BehaviorController, customActionController: CustomActionController, historyController: HistoryController | undefined);\r\n    setWorkspaceController(controller: WorkspaceController): void;\r\n}\r\n"}}
