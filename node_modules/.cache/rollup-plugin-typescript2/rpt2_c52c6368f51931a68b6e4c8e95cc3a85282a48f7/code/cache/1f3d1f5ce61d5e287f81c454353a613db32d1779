{"code":"export class FolderPathDefinitionModifierDependency {\r\n    constructor(state, definitionWalker) {\r\n        this.state = state;\r\n        this.definitionWalker = definitionWalker;\r\n    }\r\n    update() {\r\n        for (let index = 0; index < this.state.folderPath.length; index++) {\r\n            const stepId = this.state.folderPath[index];\r\n            const found = this.definitionWalker.findById(this.state.definition, stepId);\r\n            if (!found) {\r\n                // We need to update path if any folder is deleted.\r\n                const newPath = this.state.folderPath.slice(0, index);\r\n                this.state.setFolderPath(newPath);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-state.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/modifier/state-modifier-dependency.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/modifier/folder-path-definition-modifier-dependency.d.ts","writeByteOrderMark":false,"text":"import { DefinitionWalker } from '../definition';\r\nimport { DesignerState } from '../designer-state';\r\nimport { StateModifierDependency } from './state-modifier-dependency';\r\nexport declare class FolderPathDefinitionModifierDependency implements StateModifierDependency {\r\n    private readonly state;\r\n    private readonly definitionWalker;\r\n    constructor(state: DesignerState, definitionWalker: DefinitionWalker);\r\n    update(): void;\r\n}\r\n"}}
