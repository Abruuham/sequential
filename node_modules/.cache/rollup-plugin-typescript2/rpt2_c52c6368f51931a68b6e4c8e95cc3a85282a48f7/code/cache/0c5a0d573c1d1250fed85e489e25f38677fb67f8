{"code":"import { Vector } from '../core/vector';\r\nexport class PlaceholderFinder {\r\n    static create(placeholders, state) {\r\n        const checker = new PlaceholderFinder(placeholders, state);\r\n        state.onViewportChanged.subscribe(checker.clearCacheHandler);\r\n        window.addEventListener('scroll', checker.clearCacheHandler, false);\r\n        return checker;\r\n    }\r\n    constructor(placeholders, state) {\r\n        this.placeholders = placeholders;\r\n        this.state = state;\r\n        this.clearCacheHandler = () => this.clearCache();\r\n    }\r\n    find(vLt, vWidth, vHeight) {\r\n        var _a;\r\n        if (!this.cache) {\r\n            const scroll = new Vector(window.scrollX, window.scrollY);\r\n            this.cache = this.placeholders.map(placeholder => {\r\n                const rect = placeholder.getClientRect();\r\n                return {\r\n                    placeholder,\r\n                    lt: new Vector(rect.x, rect.y).add(scroll),\r\n                    br: new Vector(rect.x + rect.width, rect.y + rect.height).add(scroll)\r\n                };\r\n            });\r\n            this.cache.sort((a, b) => a.lt.y - b.lt.y);\r\n        }\r\n        const vR = vLt.x + vWidth;\r\n        const vB = vLt.y + vHeight;\r\n        return (_a = this.cache.find(p => {\r\n            return Math.max(vLt.x, p.lt.x) < Math.min(vR, p.br.x) && Math.max(vLt.y, p.lt.y) < Math.min(vB, p.br.y);\r\n        })) === null || _a === void 0 ? void 0 : _a.placeholder;\r\n    }\r\n    destroy() {\r\n        this.state.onViewportChanged.unsubscribe(this.clearCacheHandler);\r\n        window.removeEventListener('scroll', this.clearCacheHandler, false);\r\n    }\r\n    clearCache() {\r\n        this.cache = undefined;\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/vector.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-state.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/component.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/behaviors/placeholder-finder.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../core/vector';\r\nimport { DesignerState } from '../designer-state';\r\nimport { Placeholder } from '../workspace/component';\r\nexport declare class PlaceholderFinder {\r\n    private readonly placeholders;\r\n    private readonly state;\r\n    static create(placeholders: Placeholder[], state: DesignerState): PlaceholderFinder;\r\n    private readonly clearCacheHandler;\r\n    private cache?;\r\n    private constructor();\r\n    find(vLt: Vector, vWidth: number, vHeight: number): Placeholder | undefined;\r\n    destroy(): void;\r\n    private clearCache;\r\n}\r\n"}}
