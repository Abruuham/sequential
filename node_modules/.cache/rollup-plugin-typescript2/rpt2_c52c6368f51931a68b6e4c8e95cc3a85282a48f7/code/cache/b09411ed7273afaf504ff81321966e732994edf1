{"code":"export class WorkspaceControllerWrapper {\r\n    set(controller) {\r\n        if (this.controller) {\r\n            throw new Error('Controller is already set');\r\n        }\r\n        this.controller = controller;\r\n    }\r\n    get() {\r\n        if (!this.controller) {\r\n            throw new Error('Controller is not set');\r\n        }\r\n        return this.controller;\r\n    }\r\n    getPlaceholders() {\r\n        return this.get().getPlaceholders();\r\n    }\r\n    getComponentByStepId(stepId) {\r\n        return this.get().getComponentByStepId(stepId);\r\n    }\r\n    getCanvasPosition() {\r\n        return this.get().getCanvasPosition();\r\n    }\r\n    getCanvasSize() {\r\n        return this.get().getCanvasSize();\r\n    }\r\n    getRootComponentSize() {\r\n        return this.get().getRootComponentSize();\r\n    }\r\n    updateBadges() {\r\n        this.get().updateBadges();\r\n    }\r\n    updateRootComponent() {\r\n        this.get().updateRootComponent();\r\n    }\r\n    updateCanvasSize() {\r\n        this.get().updateCanvasSize();\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/step-component.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/workspace-controller.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../core';\r\nimport { Placeholder } from './component';\r\nimport { StepComponent } from './step-component';\r\nexport interface WorkspaceController {\r\n    getPlaceholders(): Placeholder[];\r\n    getComponentByStepId(stepId: string): StepComponent;\r\n    getCanvasPosition(): Vector;\r\n    getCanvasSize(): Vector;\r\n    getRootComponentSize(): Vector;\r\n    updateBadges(): void;\r\n    updateRootComponent(): void;\r\n    updateCanvasSize(): void;\r\n}\r\nexport declare class WorkspaceControllerWrapper implements WorkspaceController {\r\n    private controller?;\r\n    set(controller: WorkspaceController): void;\r\n    private get;\r\n    getPlaceholders(): Placeholder[];\r\n    getComponentByStepId(stepId: string): StepComponent;\r\n    getCanvasPosition(): Vector;\r\n    getCanvasSize(): Vector;\r\n    getRootComponentSize(): Vector;\r\n    updateBadges(): void;\r\n    updateRootComponent(): void;\r\n    updateCanvasSize(): void;\r\n}\r\n"}}
