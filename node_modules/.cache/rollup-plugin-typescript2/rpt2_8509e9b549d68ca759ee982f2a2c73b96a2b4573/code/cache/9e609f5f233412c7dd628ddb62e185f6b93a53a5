{"code":"import { QuantifiedScaleViewportCalculator } from './quantified-scale-viewport-calculator';\r\nexport class ClassicWheelController {\r\n    static create(api) {\r\n        return new ClassicWheelController(api);\r\n    }\r\n    constructor(api) {\r\n        this.api = api;\r\n    }\r\n    onWheel(e) {\r\n        const viewport = this.api.getViewport();\r\n        const canvasPosition = this.api.getCanvasPosition();\r\n        const newViewport = QuantifiedScaleViewportCalculator.zoomByWheel(viewport, e, canvasPosition);\r\n        if (newViewport) {\r\n            this.api.setViewport(newViewport);\r\n        }\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/api/workspace-api.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/viewport/quantified-scale-viewport-calculator.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/viewport/classic-wheel-controller.d.ts","writeByteOrderMark":false,"text":"import { WorkspaceApi } from '../../api/workspace-api';\r\nimport { WheelController } from '../../designer-extension';\r\nexport declare class ClassicWheelController implements WheelController {\r\n    private readonly api;\r\n    static create(api: WorkspaceApi): ClassicWheelController;\r\n    private constructor();\r\n    onWheel(e: WheelEvent): void;\r\n}\r\n"}}
