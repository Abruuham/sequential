{"code":"import { DragStepBehavior } from './drag-step-behavior';\r\nimport { MoveViewportBehavior } from './move-viewport-behavior';\r\nexport class SelectStepBehavior {\r\n    static create(pressedStepComponent, forceMove, context) {\r\n        const isDragDisabled = forceMove ||\r\n            context.state.isDragDisabled ||\r\n            !context.stateModifier.isDraggable(pressedStepComponent.step, pressedStepComponent.parentSequence);\r\n        return new SelectStepBehavior(pressedStepComponent, isDragDisabled, context.state, context.stateModifier, context);\r\n    }\r\n    constructor(pressedStepComponent, isDragDisabled, state, stateModifier, context) {\r\n        this.pressedStepComponent = pressedStepComponent;\r\n        this.isDragDisabled = isDragDisabled;\r\n        this.state = state;\r\n        this.stateModifier = stateModifier;\r\n        this.context = context;\r\n    }\r\n    onStart() {\r\n        // Nothing to do.\r\n    }\r\n    onMove(delta) {\r\n        if (delta.distance() > 2) {\r\n            const canDrag = !this.state.isReadonly && !this.isDragDisabled;\r\n            if (canDrag) {\r\n                this.state.setSelectedStepId(null);\r\n                return DragStepBehavior.create(this.context, this.pressedStepComponent.step, this.pressedStepComponent);\r\n            }\r\n            else {\r\n                return MoveViewportBehavior.create(false, this.context);\r\n            }\r\n        }\r\n    }\r\n    onEnd(interrupt) {\r\n        if (!interrupt) {\r\n            this.stateModifier.trySelectStep(this.pressedStepComponent.step, this.pressedStepComponent.parentSequence);\r\n        }\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/vector.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-state.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/modifier/state-modifier.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/step-component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/behaviors/behavior.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/behaviors/drag-step-behavior.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/behaviors/move-viewport-behavior.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/behaviors/select-step-behavior.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../core/vector';\r\nimport { DesignerContext } from '../designer-context';\r\nimport { StepComponent } from '../workspace/step-component';\r\nimport { Behavior } from './behavior';\r\nexport declare class SelectStepBehavior implements Behavior {\r\n    private readonly pressedStepComponent;\r\n    private readonly isDragDisabled;\r\n    private readonly state;\r\n    private readonly stateModifier;\r\n    private readonly context;\r\n    static create(pressedStepComponent: StepComponent, forceMove: boolean, context: DesignerContext): SelectStepBehavior;\r\n    private constructor();\r\n    onStart(): void;\r\n    onMove(delta: Vector): Behavior | void;\r\n    onEnd(interrupt: boolean): void;\r\n}\r\n"}}
