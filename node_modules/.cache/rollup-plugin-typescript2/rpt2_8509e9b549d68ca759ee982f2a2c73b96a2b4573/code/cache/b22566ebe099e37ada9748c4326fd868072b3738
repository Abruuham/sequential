{"code":"export class WorkspaceApi {\r\n    constructor(state, workspaceController) {\r\n        this.state = state;\r\n        this.workspaceController = workspaceController;\r\n    }\r\n    getCanvasPosition() {\r\n        return this.workspaceController.getCanvasPosition();\r\n    }\r\n    getCanvasSize() {\r\n        return this.workspaceController.getCanvasSize();\r\n    }\r\n    getRootComponentSize() {\r\n        return this.workspaceController.getRootComponentSize();\r\n    }\r\n    getViewport() {\r\n        return this.state.viewport;\r\n    }\r\n    setViewport(viewport) {\r\n        this.state.setViewport(viewport);\r\n    }\r\n    updateRootComponent() {\r\n        this.workspaceController.updateRootComponent();\r\n    }\r\n    updateBadges() {\r\n        this.workspaceController.updateBadges();\r\n    }\r\n    updateCanvasSize() {\r\n        this.workspaceController.updateCanvasSize();\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-state.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/workspace-controller.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/api/workspace-api.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../core';\r\nimport { Viewport } from '../designer-extension';\r\nimport { DesignerState } from '../designer-state';\r\nimport { WorkspaceControllerWrapper } from '../workspace/workspace-controller';\r\nexport declare class WorkspaceApi {\r\n    private readonly state;\r\n    private readonly workspaceController;\r\n    constructor(state: DesignerState, workspaceController: WorkspaceControllerWrapper);\r\n    getCanvasPosition(): Vector;\r\n    getCanvasSize(): Vector;\r\n    getRootComponentSize(): Vector;\r\n    getViewport(): Viewport;\r\n    setViewport(viewport: Viewport): void;\r\n    updateRootComponent(): void;\r\n    updateBadges(): void;\r\n    updateCanvasSize(): void;\r\n}\r\n"}}
