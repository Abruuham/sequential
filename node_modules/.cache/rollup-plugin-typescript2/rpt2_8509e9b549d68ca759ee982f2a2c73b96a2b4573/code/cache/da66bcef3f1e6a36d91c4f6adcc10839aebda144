{"code":"import { ObjectCloner } from './object-cloner';\r\nexport class StepDuplicator {\r\n    constructor(uidGenerator, definitionWalker) {\r\n        this.uidGenerator = uidGenerator;\r\n        this.definitionWalker = definitionWalker;\r\n    }\r\n    duplicate(step) {\r\n        const newStep = ObjectCloner.deepClone(step);\r\n        newStep.id = this.uidGenerator();\r\n        this.definitionWalker.forEachChildren(newStep, s => {\r\n            s.id = this.uidGenerator();\r\n        });\r\n        return newStep;\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-configuration.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/object-cloner.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/core/step-duplicator.d.ts","writeByteOrderMark":false,"text":"import { DefinitionWalker, Step } from '../definition';\r\nimport { UidGenerator } from '../designer-configuration';\r\nexport declare class StepDuplicator {\r\n    private readonly uidGenerator;\r\n    private readonly definitionWalker;\r\n    constructor(uidGenerator: UidGenerator, definitionWalker: DefinitionWalker);\r\n    duplicate(step: Step): Step;\r\n}\r\n"}}
