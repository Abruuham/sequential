{"code":"export class StepComponentViewContextFactory {\r\n    static create(stepContext, componentContext) {\r\n        return {\r\n            getStepIconUrl: () => componentContext.iconProvider.getIconUrl(stepContext.step),\r\n            createSequenceComponent: (parentElement, sequence) => {\r\n                const sequenceContext = {\r\n                    sequence,\r\n                    depth: stepContext.depth + 1,\r\n                    isInputConnected: true,\r\n                    isOutputConnected: stepContext.isOutputConnected\r\n                };\r\n                return componentContext.services.sequenceComponent.create(parentElement, sequenceContext, componentContext);\r\n            },\r\n            createPlaceholderForArea: componentContext.services.placeholder.createForArea.bind(componentContext.services.placeholder)\r\n        };\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/component-context.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/step-component-view-context-factory.d.ts","writeByteOrderMark":false,"text":"import { Step } from '../definition';\r\nimport { ComponentContext } from '../component-context';\r\nimport { StepComponentViewContext, StepContext } from '../designer-extension';\r\nexport declare class StepComponentViewContextFactory {\r\n    static create<S extends Step>(stepContext: StepContext<S>, componentContext: ComponentContext): StepComponentViewContext;\r\n}\r\n"}}
