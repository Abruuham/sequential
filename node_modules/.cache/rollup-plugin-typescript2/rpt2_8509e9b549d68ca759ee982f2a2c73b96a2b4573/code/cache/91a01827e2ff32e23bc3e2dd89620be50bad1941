{"code":"import { Dom } from '../core/dom';\r\nimport { Icons } from '../core/icons';\r\nimport { Editor } from './editor';\r\nexport class SmartEditorView {\r\n    static create(parent, api, configuration) {\r\n        const root = Dom.element('div', {\r\n            class: 'sqd-smart-editor'\r\n        });\r\n        const toggle = Dom.element('div', {\r\n            class: 'sqd-smart-editor-toggle',\r\n            title: 'Toggle editor'\r\n        });\r\n        parent.appendChild(toggle);\r\n        parent.appendChild(root);\r\n        if (configuration.globalEditorProvider) {\r\n            throw new Error('globalEditorProvider is renamed to rootEditorProvider');\r\n        }\r\n        const editor = Editor.create(root, api, 'sqd-editor sqd-step-editor', configuration.stepEditorProvider, 'sqd-editor sqd-root-editor', configuration.rootEditorProvider, null);\r\n        return new SmartEditorView(root, toggle, editor);\r\n    }\r\n    constructor(root, toggle, editor) {\r\n        this.root = root;\r\n        this.toggle = toggle;\r\n        this.editor = editor;\r\n    }\r\n    bindToggleClick(handler) {\r\n        this.toggle.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            handler();\r\n        }, false);\r\n    }\r\n    setIsCollapsed(isCollapsed) {\r\n        Dom.toggleClass(this.root, isCollapsed, 'sqd-hidden');\r\n        Dom.toggleClass(this.toggle, isCollapsed, 'sqd-collapsed');\r\n        if (this.toggleIcon) {\r\n            this.toggle.removeChild(this.toggleIcon);\r\n        }\r\n        this.toggleIcon = Icons.createSvg('sqd-smart-editor-toggle-icon', isCollapsed ? Icons.options : Icons.close);\r\n        this.toggle.appendChild(this.toggleIcon);\r\n    }\r\n    destroy() {\r\n        this.editor.destroy();\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/api/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/dom.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/icons.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-configuration.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/smart-editor/editor.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/smart-editor/smart-editor-view.d.ts","writeByteOrderMark":false,"text":"import { EditorApi } from '../api';\r\nimport { EditorsConfiguration } from '../designer-configuration';\r\nexport declare class SmartEditorView {\r\n    private readonly root;\r\n    private readonly toggle;\r\n    private readonly editor;\r\n    static create(parent: HTMLElement, api: EditorApi, configuration: EditorsConfiguration): SmartEditorView;\r\n    private toggleIcon?;\r\n    private constructor();\r\n    bindToggleClick(handler: () => void): void;\r\n    setIsCollapsed(isCollapsed: boolean): void;\r\n    destroy(): void;\r\n}\r\n"}}
