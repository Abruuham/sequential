{"code":"import { Vector } from '../core';\r\nexport class ViewportApi {\r\n    constructor(workspaceController, viewportController) {\r\n        this.workspaceController = workspaceController;\r\n        this.viewportController = viewportController;\r\n    }\r\n    resetViewport() {\r\n        this.viewportController.setDefault();\r\n    }\r\n    zoom(direction) {\r\n        this.viewportController.zoom(direction);\r\n    }\r\n    moveViewportToStep(stepId) {\r\n        const component = this.workspaceController.getComponentByStepId(stepId);\r\n        const canvasPosition = this.workspaceController.getCanvasPosition();\r\n        const clientPosition = component.view.getClientPosition();\r\n        const componentPosition = clientPosition.subtract(canvasPosition);\r\n        const componentSize = new Vector(component.view.width, component.view.height);\r\n        this.viewportController.focusOnComponent(componentPosition, componentSize);\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/workspace-controller.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/api/viewport-api.d.ts","writeByteOrderMark":false,"text":"import { ViewportController } from '../designer-extension';\r\nimport { WorkspaceControllerWrapper } from '../workspace/workspace-controller';\r\nexport declare class ViewportApi {\r\n    private readonly workspaceController;\r\n    private readonly viewportController;\r\n    constructor(workspaceController: WorkspaceControllerWrapper, viewportController: ViewportController);\r\n    resetViewport(): void;\r\n    zoom(direction: boolean): void;\r\n    moveViewportToStep(stepId: string): void;\r\n}\r\n"}}
