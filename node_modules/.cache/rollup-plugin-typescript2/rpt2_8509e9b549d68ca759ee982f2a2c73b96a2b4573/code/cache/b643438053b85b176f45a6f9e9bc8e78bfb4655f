{"code":"export class StepExtensionResolver {\r\n    static create(services) {\r\n        const dict = {};\r\n        for (let i = services.steps.length - 1; i >= 0; i--) {\r\n            const extension = services.steps[i];\r\n            dict[extension.componentType] = extension;\r\n        }\r\n        return new StepExtensionResolver(dict);\r\n    }\r\n    constructor(dict) {\r\n        this.dict = dict;\r\n    }\r\n    resolve(componentType) {\r\n        const extension = this.dict[componentType];\r\n        if (!extension) {\r\n            throw new Error(`Not supported component type: ${componentType}`);\r\n        }\r\n        return extension;\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/services.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/step-extension-resolver.d.ts","writeByteOrderMark":false,"text":"import { ComponentType, Step } from '../definition';\r\nimport { StepExtension } from '../designer-extension';\r\nimport { Services } from '../services';\r\nexport declare class StepExtensionResolver {\r\n    private readonly dict;\r\n    static create(services: Services): StepExtensionResolver;\r\n    private constructor();\r\n    resolve(componentType: ComponentType): StepExtension<Step>;\r\n}\r\n"}}
