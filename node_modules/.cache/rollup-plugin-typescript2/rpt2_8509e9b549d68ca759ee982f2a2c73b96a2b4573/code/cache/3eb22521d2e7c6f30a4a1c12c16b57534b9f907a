{"code":"import { ToolboxView } from './toolbox-view';\r\nexport class Toolbox {\r\n    static create(root, api) {\r\n        const allGroups = api.getAllGroups();\r\n        const view = ToolboxView.create(root, api);\r\n        const toolbox = new Toolbox(view, api, allGroups);\r\n        toolbox.render();\r\n        toolbox.onIsCollapsedChanged();\r\n        view.bindToggleClick(() => toolbox.onToggleClicked());\r\n        view.bindFilterInputChange(v => toolbox.onFilterInputChanged(v));\r\n        api.subscribeIsCollapsed(() => toolbox.onIsCollapsedChanged());\r\n        return toolbox;\r\n    }\r\n    constructor(view, api, allGroups) {\r\n        this.view = view;\r\n        this.api = api;\r\n        this.allGroups = allGroups;\r\n    }\r\n    destroy() {\r\n        this.view.destroy();\r\n    }\r\n    render() {\r\n        const groups = this.api.applyFilter(this.allGroups, this.filter);\r\n        this.view.setGroups(groups);\r\n    }\r\n    onIsCollapsedChanged() {\r\n        this.view.setIsCollapsed(this.api.isCollapsed());\r\n    }\r\n    onToggleClicked() {\r\n        this.api.toggleIsCollapsed();\r\n    }\r\n    onFilterInputChanged(value) {\r\n        this.filter = value;\r\n        this.render();\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/api/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/toolbox/toolbox-data-provider.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-extension.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/toolbox/toolbox-view.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/toolbox/toolbox.d.ts","writeByteOrderMark":false,"text":"import { ToolboxApi } from '../api';\r\nimport { UiComponent } from '../designer-extension';\r\nexport declare class Toolbox implements UiComponent {\r\n    private readonly view;\r\n    private readonly api;\r\n    private readonly allGroups;\r\n    static create(root: HTMLElement, api: ToolboxApi): Toolbox;\r\n    private filter?;\r\n    private constructor();\r\n    destroy(): void;\r\n    private render;\r\n    private onIsCollapsedChanged;\r\n    private onToggleClicked;\r\n    private onFilterInputChanged;\r\n}\r\n"}}
