{"code":"import { RectPlaceholderView } from './rect-placeholder-view';\r\nexport class RectPlaceholder {\r\n    static create(parent, size, direction, sequence, index, configuration) {\r\n        const view = RectPlaceholderView.create(parent, size.x, size.y, configuration.radius, configuration.iconSize, direction);\r\n        return new RectPlaceholder(view, sequence, index);\r\n    }\r\n    constructor(view, parentSequence, index) {\r\n        this.view = view;\r\n        this.parentSequence = parentSequence;\r\n        this.index = index;\r\n    }\r\n    getClientRect() {\r\n        return this.view.rect.getBoundingClientRect();\r\n    }\r\n    setIsHover(isHover) {\r\n        this.view.setIsHover(isHover);\r\n    }\r\n    setIsVisible(isVisible) {\r\n        this.view.setIsVisible(isVisible);\r\n    }\r\n    resolveClick() {\r\n        return null;\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/index.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/definition.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/component.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/placeholder/rect-placeholder-configuration.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/workspace/placeholder/rect-placeholder-view.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/workspace/placeholder/rect-placeholder.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../../core';\r\nimport { Sequence } from '../../definition';\r\nimport { Placeholder, PlaceholderDirection } from '../component';\r\nimport { RectPlaceholderConfiguration } from './rect-placeholder-configuration';\r\nimport { RectPlaceholderView } from './rect-placeholder-view';\r\nexport declare class RectPlaceholder implements Placeholder {\r\n    readonly view: RectPlaceholderView;\r\n    readonly parentSequence: Sequence;\r\n    readonly index: number;\r\n    static create(parent: SVGElement, size: Vector, direction: PlaceholderDirection, sequence: Sequence, index: number, configuration: RectPlaceholderConfiguration): RectPlaceholder;\r\n    constructor(view: RectPlaceholderView, parentSequence: Sequence, index: number);\r\n    getClientRect(): DOMRect;\r\n    setIsHover(isHover: boolean): void;\r\n    setIsVisible(isVisible: boolean): void;\r\n    resolveClick(): null;\r\n}\r\n"}}
