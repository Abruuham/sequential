{"code":"import { readMousePosition, readTouchPosition } from '../core/event-readers';\r\nimport { ToolboxItemView } from './toolbox-item-view';\r\nexport class ToolboxItem {\r\n    static create(parent, data, api) {\r\n        const view = ToolboxItemView.create(parent, data);\r\n        const item = new ToolboxItem(data.step, api);\r\n        view.bindMousedown(e => item.onMousedown(e));\r\n        view.bindTouchstart(e => item.onTouchstart(e));\r\n        view.bindContextMenu(e => item.onContextMenu(e));\r\n        return item;\r\n    }\r\n    constructor(step, api) {\r\n        this.step = step;\r\n        this.api = api;\r\n    }\r\n    onTouchstart(e) {\r\n        e.preventDefault();\r\n        if (e.touches.length === 1) {\r\n            e.stopPropagation();\r\n            this.tryDrag(readTouchPosition(e));\r\n        }\r\n    }\r\n    onMousedown(e) {\r\n        e.stopPropagation();\r\n        const isPrimaryButton = e.button === 0;\r\n        if (isPrimaryButton) {\r\n            this.tryDrag(readMousePosition(e));\r\n        }\r\n    }\r\n    onContextMenu(e) {\r\n        e.preventDefault();\r\n    }\r\n    tryDrag(position) {\r\n        this.api.tryDrag(position, this.step);\r\n    }\r\n}\r\n","references":["C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/api/toolbox-api.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/toolbox/toolbox-data-provider.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/event-readers.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/core/vector.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/designer-configuration.ts","C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/src/toolbox/toolbox-item-view.ts"],"dts":{"name":"C:/Users/abrah/Documents/sequential/sequential-workflow-designer/designer/build/toolbox/toolbox-item.d.ts","writeByteOrderMark":false,"text":"import { ToolboxApi } from '../api/toolbox-api';\r\nimport { ToolboxItemData } from './toolbox-data-provider';\r\nexport declare class ToolboxItem {\r\n    private readonly step;\r\n    private readonly api;\r\n    static create(parent: HTMLElement, data: ToolboxItemData, api: ToolboxApi): ToolboxItem;\r\n    private constructor();\r\n    private onTouchstart;\r\n    private onMousedown;\r\n    private onContextMenu;\r\n    private tryDrag;\r\n}\r\n"}}
